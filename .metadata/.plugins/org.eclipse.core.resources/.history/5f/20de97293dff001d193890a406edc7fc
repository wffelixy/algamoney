package com.example.algamoney.api.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;
import org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;
import org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;
import org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer;
import org.springframework.security.oauth2.provider.token.TokenStore;
import org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore;


public class AuthorizationServerConfig extends AuthorizationServerConfigurerAdapter{
	
	private AuthenticationManager authenticationManager;	
	
	    public void configure(ClientDetailsServiceConfigurer clients) throws Exception {
	        clients.inMemory()
	            .withClient("angular")
	            .secret("123456")
	            .scopes("read", "write")
	            .authorizedGrantTypes("password")
	            .accessTokenValiditySeconds(1800);
	    }

	
	public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {
		   endpoints
		   .tokenStore(tokenStore())
		   .authenticationManager(authenticationManager);
	}
	   
	 
	   public TokenStore tokenStore() {
		   return new InMemoryTokenStore();
	   }
}
